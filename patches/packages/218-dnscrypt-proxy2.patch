diff --git a/net/dnscrypt-proxy2/Config.in b/net/dnscrypt-proxy2/Config.in
new file mode 100644
index 000000000..2fb810c0b
--- /dev/null
+++ b/net/dnscrypt-proxy2/Config.in
@@ -0,0 +1,7 @@
+if PACKAGE_dnscrypt-proxy2
+
+config DNSCRYPT_UPX_COMPRESS
+	bool "Compress binary using UPX (Decreases size by 4775kB, increases runtime memory usage by 4500kB)"
+	default n
+
+endif
diff --git a/net/dnscrypt-proxy2/Makefile b/net/dnscrypt-proxy2/Makefile
index 3b761d50b..c9a2196de 100644
--- a/net/dnscrypt-proxy2/Makefile
+++ b/net/dnscrypt-proxy2/Makefile
@@ -20,7 +20,8 @@ PKG_MAINTAINER:=Josef Schlehofer <josef.schlehofer@nic.cz>
 PKG_LICENSE:=ISC
 PKG_LICENSE_FILES:=LICENSE
 
-PKG_BUILD_DEPENDS:=golang/host
+PKG_CONFIG_DEPENDS:=CONFIG_DNSCRYPT_UPX_COMPRESS
+PKG_BUILD_DEPENDS:=golang/host DNSCRYPT_UPX_COMPRESS:upx/host
 PKG_BUILD_PARALLEL:=1
 PKG_USE_MIPS16:=0
 
@@ -38,21 +39,28 @@ define Package/dnscrypt-proxy2
   CONFLICTS:=dnscrypt-proxy
 endef
 
-define Package/dnscrypt-proxy2/install
-	$(call GoPackage/Package/Install/Bin,$(PKG_INSTALL_DIR))
+define Package/dnscrypt-proxy2/config
+	source "$(SOURCE)/Config.in"
+endef
 
+define Build/Compile
+	$(call GoPackage/Build/Compile,-ldflags "-s -w")
+
+	$(if $(CONFIG_DNSCRYPT_UPX_COMPRESS), \
+		$(STAGING_DIR_HOST)/bin/upx --lzma $(GO_PKG_BUILD_BIN_DIR)/dnscrypt-proxy)
+endef
+
+define Package/dnscrypt-proxy2/install
 	$(INSTALL_DIR) $(1)/usr/sbin
-	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/bin/* $(1)/usr/sbin/
+	$(INSTALL_BIN) $(GO_PKG_BUILD_BIN_DIR)/dnscrypt-proxy $(1)/usr/sbin/dnscrypt-proxy
 
 	$(INSTALL_DIR) $(1)/etc/dnscrypt-proxy2
-	$(INSTALL_CONF) $(PKG_BUILD_DIR)/dnscrypt-proxy/example-dnscrypt-proxy.toml $(1)/etc/dnscrypt-proxy2/dnscrypt-proxy.toml
+	$(INSTALL_CONF) $(PKG_BUILD_DIR)/dnscrypt-proxy/example-*.{txt,toml} $(1)/etc/dnscrypt-proxy2
+	$(INSTALL_CONF) ./files/dnscrypt-proxy.toml $(1)/etc/dnscrypt-proxy2/dnscrypt-proxy.toml
 	$(INSTALL_CONF) ./files/blacklist.txt $(1)/etc/dnscrypt-proxy2/blacklist.txt
 
 	$(INSTALL_DIR) $(1)/etc/init.d
 	$(INSTALL_BIN) ./files/dnscrypt-proxy.init $(1)/etc/init.d/dnscrypt-proxy
-
-	sed -i "s/^listen_addresses = .*/listen_addresses = ['127.0.0.53:53']/" $(1)/etc/dnscrypt-proxy2/dnscrypt-proxy.toml
-	sed -i "s/^  # blacklist_file = 'blacklist.txt'/blacklist_file = 'blacklist.txt'/" $(1)/etc/dnscrypt-proxy2/dnscrypt-proxy.toml
 endef
 
 define Package/dnscrypt-proxy2/description
diff --git a/net/dnscrypt-proxy2/files/dnscrypt-proxy.init b/net/dnscrypt-proxy2/files/dnscrypt-proxy.init
index db07d5e8d..da162fba7 100644
--- a/net/dnscrypt-proxy2/files/dnscrypt-proxy.init
+++ b/net/dnscrypt-proxy2/files/dnscrypt-proxy.init
@@ -1,21 +1,83 @@
 #!/bin/sh /etc/rc.common
 
 USE_PROCD=1
+NICEPRIO=5
 
 # starts before dnsmasq starts
 START=18
 # stops before networking stops
 STOP=89
 
-PROG=/usr/sbin/dnscrypt-proxy
-CONFIGFILE=/etc/dnscrypt-proxy2/dnscrypt-proxy.toml
-
-start_service() {
-        procd_open_instance
-        procd_set_param command "$PROG" -config "$CONFIGFILE"
-        procd_set_param file "$CONFIGFILE"
-        procd_set_param stdout 1
-        procd_set_param stderr 1
-        procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-5}
-        procd_close_instance
+PROG="/usr/sbin/dnscrypt-proxy"
+INIT="/etc/init.d/dnscrypt-proxy"
+CONFIG_DIR="/var/etc/dnscrypt-proxy2"
+CONFIG_FILE="$CONFIG_DIR/dnscrypt-proxy.toml"
+CONFIG_FILE_TMP="$CONFIG_FILE.$$"
+PID_FILE="/var/run/dnscrypt_proxy2.pid"
+MANUAL_CONFIG="/etc/dnscrypt-proxy2/dnscrypt-proxy.toml"
+
+boot()
+{
+	dnscrypt_proxy2_boot=1
+	rc_procd start_service
+}
+
+xappend()
+{
+	echo "$1 = $2" >> $CONFIG_FILE_TMP
+}
+
+generate_config()
+{
+	local config_file="$1"
+	
+}
+
+start_service()
+{
+	local manual
+
+	mkdir -p "$CONFIG_DIR"
+
+	config_load "dnscrypt-proxy2"
+
+	config_get_bool manual "global" manual "0"
+
+	if [ "$manual" = "1" ]; then
+		cp "$MANUAL_CONFIG" "$CONFIG_FILE"
+	else
+		generate_config "$CONFIG_FILE_TMP"
+		mv "$CONFIG_FILE_TMP" "$CONFIG_FILE"
+	fi
+
+	if [ "$("$INIT" enabled; printf "%u" $?)" -eq 0 ]; then
+		if [ -n "$dnscrypt_proxy2_boot" ]; then
+			local trigger
+			trigger="$(uci_get dnscrypt-proxy2 global trigger)"
+			if [ "$trigger" != "timed" ]; then
+				return 0
+			fi
+		fi
+		procd_open_instance
+		procd_set_param command "$PROG" -config "$CONFIG_FILE"
+		procd_set_param respawn
+		procd_set_param nice "$NICEPRIO"
+		procd_set_param file "$CONFIG_FILE"
+		procd_close_instance
+	fi
+}
+
+service_triggers()
+{
+	local trigger
+	local delay
+
+	trigger="$(uci_get dnscrypt-proxy2 global trigger)"
+	delay="$(uci_get dnscrypt-proxy2 global triggerdelay "2")"
+
+	if [ "$trigger" != "none" ] && [ "$trigger" != "timed" ]; then
+		PROCD_RELOAD_DELAY=$((${delay:-2} * 1000))
+		procd_add_interface_trigger "interface.*.up" "$trigger" "$INIT" start
+	fi
+	procd_add_reload_trigger "dnscrypt-proxy2"
 }
diff --git a/net/dnscrypt-proxy2/files/dnscrypt-proxy.toml b/net/dnscrypt-proxy2/files/dnscrypt-proxy.toml
new file mode 100644
index 000000000..17a1a4b25
--- /dev/null
+++ b/net/dnscrypt-proxy2/files/dnscrypt-proxy.toml
@@ -0,0 +1,214 @@
+
+##############################################
+#                                            #
+#        dnscrypt-proxy configuration        #
+#                                            #
+##############################################
+
+## This is an example configuration file.
+## You should adjust it to your needs, and save it as "dnscrypt-proxy.toml"
+##
+## Online documentation is available here: https://dnscrypt.info/doc
+
+##################################
+#         Global settings        #
+##################################
+
+server_names = ['scaleway-fr', 'google', 'yandex', 'cloudflare', 'cisco', 'CloudflareIPv4', 'CloudflareIPv6']		# Added servers from static section
+listen_addresses = ['127.0.0.53:53']
+max_clients = 250
+# user_name = 'nobody'
+ipv4_servers = true
+ipv6_servers = false
+dnscrypt_servers = true
+doh_servers = true
+require_dnssec = false
+require_nolog = true
+require_nofilter = true
+disabled_server_names = []
+force_tcp = false
+# proxy = 'socks5://127.0.0.1:9050'
+# http_proxy = 'http://127.0.0.1:8888'
+timeout = 2500		 # Changed to 2500
+keepalive = 30
+# blocked_query_response = 'refused'
+# lb_strategy = 'p2'
+# lb_estimator = true
+# log_level = 2
+# log_file = '/var/log/dnscrypt-proxy2.log'
+use_syslog = true		 # Use syslog
+cert_refresh_delay = 240
+# dnscrypt_ephemeral_keys = false
+# tls_disable_session_tickets = false
+# tls_cipher_suite = [52392, 49199]
+fallback_resolver = '1.1.1.1:53'
+ignore_system_dns = true
+netprobe_timeout = 60
+netprobe_address = '9.9.9.9:53'
+# offline_mode = false
+# query_meta = ["key1:value1", "key2:value2", "key3:value3"]
+log_files_max_size = 10
+log_files_max_age = 7
+log_files_max_backups = 1
+
+
+#########################
+#        Filters        #
+#########################
+
+block_ipv6 = false
+reject_ttl = 600
+
+
+##################################################################################
+#        Route queries for specific domains to a dedicated set of servers        #
+##################################################################################
+
+# forwarding_rules = '/etc/dnscrypt-proxy2/forwarding-rules.txt'
+
+
+###############################
+#        Cloaking rules       #
+###############################
+
+# cloaking_rules = '/etc/dnscrypt-proxy2/cloaking-rules.txt'
+# cloak_ttl = 600
+
+
+###########################
+#        DNS cache        #
+###########################
+
+cache = true
+cache_size = 3000		 # Increase Cache Size from 1024 to 3000
+cache_min_ttl = 2400
+cache_max_ttl = 86400
+cache_neg_min_ttl = 60
+cache_neg_max_ttl = 600
+
+
+##################################
+#        Local DoH server        #
+##################################
+
+[local_doh]
+# listen_addresses = ['127.0.0.1:3000']
+# path = "/dns-query"
+# cert_file = "localhost.pem"
+# cert_key_file = "localhost.pem"
+
+
+###############################
+#        Query logging        #
+###############################
+
+[query_log]
+
+  # file = '/var/log/dnscrypt-proxy2-query.log'
+  format = 'tsv'
+  # ignored_qtypes = ['DNSKEY', 'NS']
+
+
+############################################
+#        Suspicious queries logging        #
+############################################
+
+[nx_log]
+
+  # file = '/var/log/dnscrypt-proxy2-nxdomain.log'
+  format = 'tsv'
+
+
+######################################################
+#        Pattern-based blocking (blacklists)        #
+######################################################
+
+[blacklist]
+
+  blacklist_file = '/etc/dnscrypt-proxy2/blacklist.txt'
+  # log_file = '/var/log/dnscrypt-proxy2-blacklist-domains.log'
+  # log_format = 'tsv'
+
+
+###########################################################
+#        Pattern-based IP blocking (IP blacklists)        #
+###########################################################
+
+[ip_blacklist]
+
+  # blacklist_file = '/etc/dnscrypt-proxy2/ip-blacklist.txt'
+  # log_file = '/var/log/dnscrypt-proxy2-blacklist-ips.log'
+  # log_format = 'tsv'
+
+
+######################################################
+#   Pattern-based whitelisting (blacklists bypass)   #
+######################################################
+
+[whitelist]
+
+  # whitelist_file = '/etc/dnscrypt-proxy2/whitelist.txt'
+  # log_file = '/var/log/dnscrypt-proxy2-whitelisted.log'
+  # log_format = 'tsv'
+
+
+#########################
+#        Servers        #
+#########################
+
+[sources]
+
+  [sources.'public-resolvers']
+  urls = ['https://raw.githubusercontent.com/DNSCrypt/dnscrypt-resolvers/master/v2/public-resolvers.md', 'https://download.dnscrypt.info/resolvers-list/v2/public-resolvers.md']
+  cache_file = 'public-resolvers.md'
+  minisign_key = 'RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3'
+  prefix = ''
+
+  [sources.'relays']
+  urls = ['https://raw.githubusercontent.com/DNSCrypt/dnscrypt-resolvers/master/v2/relays.md', 'https://download.dnscrypt.info/resolvers-list/v2/relays.md']
+  cache_file = 'relays.md'
+  minisign_key = 'RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3'
+  refresh_delay = 72
+  prefix = ''
+
+  [sources.quad9-resolvers]
+  urls = ['https://www.quad9.net/quad9-resolvers.md']
+  minisign_key = 'RWQBphd2+f6eiAqBsvDZEBXBGHQBJfeG6G+wJPPKxCZMoEQYpmoysKUN'
+  cache_file = 'quad9-resolvers.md'
+  prefix = 'quad9-'
+
+
+#########################################
+#        Servers with known bugs        #
+#########################################
+
+[broken_implementations]
+broken_query_padding = ['cisco', 'cisco-ipv6', 'cisco-familyshield']
+
+
+################################
+#        Anonymized DNS        #
+################################
+
+[anonymized_dns]
+
+# routes = [
+#    { server_name='example-server-1', via=['anon-example-1', 'anon-example-2'] },
+#    { server_name='example-server-2', via=['sdns://gRIxMzcuNzQuMjIzLjIzNDo0NDM'] }
+# ]
+
+
+[static]
+
+  [static.'CloudflareIPv4']
+  stamp = 'sdns://AgcAAAAAAAAABzEuMC4wLjEg63Ul-I8NlFj4GplQGb_TTLiczclX57DvMV8Q-JdjgRgSZG5zLmNsb3VkZmxhcmUuY29tCi9kbnMtcXVlcnk'
+
+  [static.'CloudflareIPv6']
+  stamp = 'sdns://AgcAAAAAAAAAGVsyNjA2OjQ3MDA6NDcwMDo6MTExMV06NTMg63Ul-I8NlFj4GplQGb_TTLiczclX57DvMV8Q-JdjgRgSZG5zLmNsb3VkZmxhcmUuY29tCi9kbnMtcXVlcnk'
+
+  [static.'google']
+  stamp = 'sdns://AgUAAAAAAAAAACDyXGrcc5eNecJ8nomJCJ-q6eCLTEn6bHic0hWGUwYQaA5kbnMuZ29vZ2xlLmNvbQ0vZXhwZXJpbWVudGFs'
+
+  [static.'cisco']
+  stamp = 'sdns://AQAAAAAAAAAAD1syNjIwOjA6Y2NjOjoyXSC3NRFAIG8iXT4r2CLX_WkeocM8yNZmjQy-BL-rykP7eRsyLmRuc2NyeXB0LWNlcnQub3BlbmRucy5jb20'
+
