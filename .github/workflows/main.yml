name: Build OpenWrt snapshot

on:
  repository_dispatch:
  workflow_dispatch:

env:
  OPENWRT_REPO: openwrt/openwrt
  OPENWRT_REPO_BRANCH: master
  FEEDS: "packages luci routing telephony freifunk waller"
  BUILD_APPLYPATCH: true
  BUILD_PREPARE: true
  BUILD_COMPILE: true

jobs:
  get_version:
    name: Retrieve version info
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        path: openwrt-firmware

    - name: Checkout OpenWrt repo
      uses: actions/checkout@v2
      with:
        repository: ${{ env.OPENWRT_REPO }}
        ref: ${{ env.OPENWRT_REPO_BRANCH }}
        fetch-depth: 1
        path: openwrt

    - name: Retrieve commit ids
      run: |
        mkdir -p version
        echo "$(date -u +%Y%m%d-%H%M%S)" > version/timestamp
        echo "$(cd openwrt-firmware; git rev-parse HEAD)" > version/commitid
        echo "$(cd openwrt; git rev-parse HEAD)" > version/openwrt_commitid
        cat version/timestamp
        cat version/commitid
        cat version/openwrt_commitid

    - name: Upload version
      uses: actions/upload-artifact@v2
      with:
        name: version
        path: version/
        
  prepare:
    name: Prepare OpenWrt repo
    needs: [get_version]
    runs-on: ubuntu-20.04
    steps:
    - name: Download version
      uses: actions/download-artifact@v2
      with:
        name: version
        path: version/

    - name: Initialization environment
      working-directory: version
      run: |
        echo "TIMESTAMP=$(cat timestamp)" >> $GITHUB_ENV
        echo "COMMITID=$(cat commitid)" >> $GITHUB_ENV
        echo "OPENWRT_COMMITID=$(cat openwrt_commitid)" >> $GITHUB_ENV
        cat timestamp
        cat commitid
        cat openwrt_commitid

    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        ref: ${{ env.COMMITID }}
        fetch-depth: 1
        path: openwrt-firmware

    - name: Cache openwrt folder
      uses: actions/cache@v2
      with:
        path: openwrt/
        key: openwrt-${{ env.OPENWRT_COMMITID }}-${{ env.COMMITID }}

    - name: Checkout OpenWrt repo
      uses: actions/checkout@v2
      with:
        repository: ${{ env.OPENWRT_REPO }}
        ref: ${{ env.OPENWRT_REPO_BRANCH }}
        fetch-depth: 0
        path: openwrt

    - name: Retieve OpenWrt Version
      working-directory: openwrt
      run: |
        git checkout ${{ env.OPENWRT_COMMITID }}
        VERSION=$(./scripts/getver.sh)
        cd $GITHUB_WORKSPACE/version
        echo ${{ env.OPENWRT_REPO_BRANCH }}-$VERSION-${{ env.TIMESTAMP }} > openwrt_version
        cat openwrt_version

    - name: Upload version
      uses: actions/upload-artifact@v2
      with:
        name: version
        path: version/openwrt_version

    - name: Apply patches to base feed
      if: env.BUILD_APPLYPATCH == 'true'
      working-directory: openwrt
      run: |
        PATCH_DIR="$GITHUB_WORKSPACE/openwrt-firmware/patches"
        [ -d $PATCH_DIR/base ] && PATCHES="$( ls $PATCH_DIR/base/*.patch )"
        for i in $PATCHES; do
          echo -e "\n---- Applying patch $(basename $i) ----\n"
          git apply -v --whitespace=nowarn $i
        done

    - name: Update feeds
      working-directory: openwrt
      run: ./scripts/feeds update -a

    - name: Apply patches to feeds
      if: env.BUILD_APPLYPATCH == 'true'
      working-directory: openwrt
      run: |
        FEED_DIR="$GITHUB_WORKSPACE/openwrt/feeds"
        PATCH_DIR="$GITHUB_WORKSPACE/openwrt-firmware/patches"
        for feed in $FEEDS; do
          if [ -d "$FEED_DIR/$feed" ] && [ -d "$PATCH_DIR/$feed" ]; then
            echo -e "\n---- Applying patches to $feed feed ----\n"
            ( 
              cd "$FEED_DIR/$feed";
                for i in $( ls "$PATCH_DIR/$feed"/*.patch ); do
                  echo  -e "\n---- Applying patch $(basename $i) ----\n"
                  git apply -v --whitespace=nowarn $i
                done 
            )
          fi
        done

    - name: Update & Install feeds
      working-directory: openwrt
      run: |
        ./scripts/feeds update -i
        ./scripts/feeds install -a

  build:
    name: Build ${{ matrix.device }}
    needs: [prepare]
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: False
      matrix:
        include:
          - device: "netgear_r7800"
            target: "ipq806x"
            subtarget: "generic"
            config: "R7800"
          - device: "netgear_ex6150v2"
            target: "ipq40xx"
            subtarget: "generic"
            config: "EX6150v2"

    steps:
    - name: Download version
      if: env.BUILD_PREPARE == 'true'
      uses: actions/download-artifact@v2
      with:
        name: version
        path: version/

    - name: Initialization environment
      if: env.BUILD_PREPARE == 'true'
      working-directory: version
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get -y install libncurses-dev

        echo "TARGET=${{ matrix.target }}" >> "$GITHUB_ENV"
        echo "SUBTARGET=${{ matrix.subtarget }}" >> "$GITHUB_ENV"

        echo "TIMESTAMP=$(cat timestamp)" >> $GITHUB_ENV
        echo "COMMITID=$(cat commitid)" >> $GITHUB_ENV
        echo "OPENWRT_COMMITID=$(cat openwrt_commitid)" >> $GITHUB_ENV
        echo "OPENWRT_VERSION=$(cat openwrt_version)" >> $GITHUB_ENV
        cat timestamp
        cat commitid
        cat openwrt_commitid
        cat openwrt_version

    - name: Checkout repo
      if: env.BUILD_PREPARE == 'true'
      uses: actions/checkout@v2
      with:
        ref: ${{ env.COMMITID }}
        fetch-depth: 1
        path: openwrt-firmware

    - name: Cache openwrt folder
      if: env.BUILD_PREPARE == 'true'
      uses: actions/cache@v2
      with:
        path: openwrt/
        key: openwrt-${{ env.OPENWRT_COMMITID }}-${{ env.COMMITID }}

    - name: Cache sources
      id: cache-dl
      if: env.BUILD_PREPARE == 'true'
      uses: actions/cache@v2
      with:
        path: dl/
        key: downloads-${{ matrix.device }}-${{ env.OPENWRT_COMMITID }}

    - name: Load previous cache
      if: env.BUILD_PREPARE == 'true' && steps.cache-dl.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with: 
        path: dl/
        key: downloads-${{ matrix.device }}

    - name: Set configuration
      if: env.BUILD_PREPARE == 'true'
      working-directory: openwrt
      env:
        CONFIG_FILES: "common_hnyman.config.init common_override.config.init ${{ matrix.config }}.config.init"
      run: |
        curl "https://downloads.openwrt.org/snapshots/targets/${{ matrix.target }}/${{ matrix.subtarget }}/config.buildinfo" > .config

        echo -e "\n# Use "make defconfig" to expand this to a full .config\n\n" > .config.init
        for i in $CONFIG_FILES; do
          if [ -f "$GITHUB_WORKSPACE/openwrt-firmware/$i" ]; then
            echo -e "\n\n\n## $i ##\n\n" >> .config.init
            cat "$GITHUB_WORKSPACE/openwrt-firmware/$i" >> .config.init
          fi
        done
        cp -fpR .config.init .config
        make defconfig
        ./scripts/diffconfig.sh > .diffconfig

        #echo -e "\n---- config post-defconfig ----\n"
        #cat .config
        #echo -e "\n---- config post-defconfig ----\n"

        #echo -e "\n---- diffconfig ----\n"
        cat .diffconfig
        #echo -e "\n---- diffconfig ----\n"

        mkdir -p $GITHUB_WORKSPACE/config
        cp -fpR .config $GITHUB_WORKSPACE/config/${{ matrix.device }}.config
        cp -fpR .diffconfig $GITHUB_WORKSPACE/config/${{ matrix.device }}.diffconfig

    - name: Download package
      if: env.BUILD_PREPARE == 'true'
      working-directory: openwrt
      run: |
        make download -j$(nproc)

    - name: Build tools
      if: env.BUILD_COMPILE == 'true'
      working-directory: openwrt
      run: |
        make tools/install -j$(nproc) || \
          make tools/install V=s

    - name: Build toolchain
      if: env.BUILD_COMPILE == 'true'
      working-directory: openwrt
      run: |
        make toolchain/install -j$(nproc) || \
          make toolchain/install V=s

    - name: Build target
      if: env.BUILD_COMPILE == 'true'
      working-directory: openwrt
      run: |
        make target/compile -j$(nproc) IGNORE_ERRORS='n m' || \
          make target/compile IGNORE_ERRORS='n m' V=s

    - name: Buildinfo
      if: env.BUILD_COMPILE == 'true'
      working-directory: openwrt
      run: |
        make buildinfo V=s

    - name: Build packages
      if: env.BUILD_COMPILE == 'true'
      working-directory: openwrt
      run: |
        make package/compile -j$(nproc) IGNORE_ERRORS='n m' || \
          make package/compile IGNORE_ERRORS='n m' V=s

        make package/install -j$(nproc) || \
          make package/install V=s

        make package/index V=s

    - name: Build firmware
      if: env.BUILD_COMPILE == 'true'
      working-directory: openwrt
      run: |
        make target/install -j$(nproc) || \
          make target/install V=s

    - name: JSON overview
      if: env.BUILD_COMPILE == 'true'
      working-directory: openwrt
      run: |
        make json_overview_image_info V=s

    - name: Checksum
      if: env.BUILD_COMPILE == 'true'
      working-directory: openwrt
      run: |
        make checksum V=s

    - name: Sanitize target
      run: echo "target_sani=${{ env.TARGET }}-${{ env.SUBTARGET }}" >> "$GITHUB_ENV"
    
    - name: Upload images
      if: env.BUILD_COMPILE == 'true'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.target_sani }}-images
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/openwrt-${{ env.TARGET }}-*

    - name: Upload packages
      if: env.BUILD_COMPILE == 'true'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.target_sani }}-packages
        path: |
          openwrt/bin/**/*.ipk
          !openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/packages/kmod-*.ipk

    - name: Upload kmods
      if: env.BUILD_COMPILE == 'true'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.target_sani }}-kmods
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/packages/kmod-*.ipk

    - name: Upload supplementary
      if: env.BUILD_COMPILE == 'true'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.target_sani }}-supplementary
        path: |
          openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/*.buildinfo
          openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/*.json
          openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/*.manifest
          openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/sha256sums*

    - name: Upload logs
      if: env.BUILD_COMPILE == 'true'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.target_sani }}-logs
        path: openwrt/logs/

    - name: Upload config
      if: env.BUILD_COMPILE == 'true'
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.target_sani }}-config
        path: config/
