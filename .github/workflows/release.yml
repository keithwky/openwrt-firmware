name: Release OpenWrt Firmwares

on:
  workflow_dispatch:

env:
  WORKFLOW_NAME: "build.yml"
  RELEASE: false

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-20.04
    steps:
    - name: Download version
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: ${{ env.WORKFLOW_NAME }}
        workflow_conclusion: success
        name: openwrt-version
        path: version

    - name: Initialization environment
      working-directory: version
      run: |
        echo "TIMESTAMP=$(cat timestamp)" >> $GITHUB_ENV
        echo "COMMITID=$(cat commitid)" >> $GITHUB_ENV
        echo "OPENWRT_COMMITID=$(cat openwrt_commitid)" >> $GITHUB_ENV
        echo "OPENWRT_VERSION=$(cat openwrt_version)" >> $GITHUB_ENV
        cat timestamp
        cat commitid
        cat openwrt_commitid
        cat openwrt_version
        echo "TAG_NAME=v$(cat timestamp | sed -n 's/^\([0-9]\{8\}\)-[0-9]\{6\}$/\1/p')" >> $GITHUB_ENV

    - name: Tag commit
      if: env.RELEASE == 'true'
      uses: tvdias/github-tagger@v0.0.2
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        tag: ${{ env.TAG_NAME }}

    - name: Output release files
      run: |
        echo "${{ env.TAG_NAME }}" > release_tag
        echo "${{ env.OPENWRT_VERSION }}-${{ env.TIMESTAMP }}" > release_name
        echo -e "Build Time : ${{ env.TIMESTAMP }}\nOpenWrt Commit : ${{ env.OPENWRT_COMMITID }}\nOpenWrt Version : ${{ env.OPENWRT_VERSION }}-${{ env.OPENWRT_COMMITID }}\n" > release_body

    - name: Upload release files
      uses: actions/upload-artifact@v2
      with:
        name: release
        path: |
          release_tag
          release_name
          release_body

    #- name: Create Release
    #  id: create_release
    #  if: env.RELEASE == 'true'
    #  uses: actions/create-release@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    tag_name: v${{ env.TIMESTAMP }}
    #    release_name: ${{ env.OPENWRT_VERSION }}-${{ env.TIMESTAMP }}
    #    body: |
    #      Build Time : ${{ env.TIMESTAMP }}
    #      OpenWrt Commit : ${{ env.OPENWRT_COMMITID }}
    #      OpenWrt Version : ${{ env.OPENWRT_VERSION }}-${{ env.OPENWRT_COMMITID }}

    #- name: Output release url file
    #  if: env.RELEASE == 'true'
    #  run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url

    #- name: Upload release url file
    #  if: env.RELEASE == 'true'
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: release_url
    #    path: release_url

  upload_release:
    name: Upload Release Files - ${{ matrix.device }}
    needs: [create_release]
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: False
      matrix:
        include:
          - device: "netgear_r7800"
            target: "ipq806x"
            subtarget: "generic"
            factory_img: "squashfs-factory.img"
            sysupgrade_img: "squashfs-sysupgrade.bin"
          - device: "netgear_ex6150v2"
            target: "ipq40xx"
            subtarget: "generic"
            factory_img: "squashfs-factory.img"
            sysupgrade_img: "squashfs-sysupgrade.bin"

    steps:
    #- name: Download release url file
    #  if: env.RELEASE == 'true'
    #  uses: actions/download-artifact@v2
    #  with:
    #    name: release_url
    #    path: release_url/

    #- name: Get upload url
    #  if: env.RELEASE == 'true'
    #  working-directory: release_url
    #  run: |
    #    echo "UPLOAD_URL=$(cat release_url)" >> $GITHUB_ENV
    #    cat release_url

    - name: Download release files
      uses: actions/download-artifact@v2
      with:
        name: release

    - name: Get release info
      run: |
        echo "RELEASE_TAG=$(cat release_tag)" >> $GITHUB_ENV
        echo "RELEASE_NAME=$(cat release_name)" >> $GITHUB_ENV
        echo "RELEASE_BODY=$(cat release_body)" >> $GITHUB_ENV
        cat release_tag
        cat release_name
        cat release_body

    - name: Download config
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: ${{ env.WORKFLOW_NAME }}
        workflow_conclusion: success
        name: openwrt-${{ matrix.target }}-${{ matrix.subtarget }}-config
        path: config

    - name: Download images
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: ${{ env.WORKFLOW_NAME }}
        workflow_conclusion: success
        name: openwrt-${{ matrix.target }}-${{ matrix.subtarget }}-images
        path: images

    - name: Download supplementary
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: ${{ env.WORKFLOW_NAME }}
        workflow_conclusion: success
        name: openwrt-${{ matrix.target }}-${{ matrix.subtarget }}-supplementary
        path: supplementary

    - name: Copy files to release folder
      run: |
        mkdir -p release
        cp -fpR supplementary/openwrt-feeds.buildinfo release
        cp -fpR supplementary/openwrt-version.buildinfo release
        cp -fpR supplementary/openwrt-${{ matrix.target }}-${{ matrix.subtarget }}-config.buildinfo release
        cp -fpR config/openwrt-${{ matrix.target }}-${{ matrix.subtarget }}.config release
        cp -fpR supplementary/openwrt-${{ matrix.target }}-${{ matrix.subtarget }}-${{ matrix.device }}.manifest release
        cp -fpR images/openwrt-${{ matrix.target }}-${{ matrix.subtarget }}-${{ matrix.device }}-${{ matrix.factory_img }} release
        cp -fpR images/openwrt-${{ matrix.target }}-${{ matrix.subtarget }}-${{ matrix.device }}-${{ matrix.sysupgrade_img }} release
        cp -fpR supplementary/openwrt-${{ matrix.target }}-${{ matrix.subtarget }}-sha256sums release
        ls -l release

    - name: Create release and upload files
      if: env.RELEASE == 'true'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: release/*
        tag: ${{ env.RELEASE_TAG }}
        file_glob: true
        overwrite: true
        release_name: ${{ env.RELEASE_NAME }}
        body: ${{ env.RELEASE_BODY }}
